{"ast":null,"code":"var _jsxFileName = \"/Users/jichenjiang/Downloads/PRI code1/src/Components/AssetDetails.js\";\nimport React, { Component } from \"react\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Output from \"../output.json\"; //import \"./assets.css\"\n\nvar data = require('../output.json'); // forward slashes will depend on the file location\n\n\nfor (var i = 0; i < data.length; i++) {\n  var obj = data[i];\n}\n\nclass AssetDetails extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      assets: []\n    };\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:3000/data').then(results => results.json()).then(data => this.setState({\n      assets: data.data\n    }));\n  }\n\n  render() {\n    var data;\n\n    function loadJSON(jsonfile, callback) {\n      var jsonObj = new XMLHttpRequest();\n      jsonObj.overrideMimeType(\"application/json\");\n      jsonObj.open('GET', \"../output.json\", true);\n\n      jsonObj.onreadystatechange = function () {\n        if (jsonObj.readyState == 4 && jsonObj.status == \"200\") {\n          callback(jsonObj.responseText);\n        }\n      };\n\n      jsonObj.send(null);\n    }\n\n    function load() {\n      loadJSON(jsonData, function (response) {\n        data = JSON.parse(response);\n        console.log(data);\n      });\n    }\n\n    load();\n    const styleObj = {\n      fontSize: 13,\n      color: \"#4a54f1\",\n      textAlign: \"center\",\n      fontFamily: 'quicksand,sans-serif'\n    };\n    const tableHeader = React.createElement(TableHead, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(TableRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      style: styleObj,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Device Topic\")), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      style: styleObj,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Device Message\"))));\n    const content = React.createElement(TableBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(TableRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Output.DeviceMessage\"), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"1\")));\n    return React.createElement(\"div\", {\n      className: \"App-GridDiv\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(Table, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, tableHeader, content))));\n  }\n\n} //<TableCell>{asset.timeLastShown}</TableCell>\n\n\nexport default AssetDetails;","map":{"version":3,"sources":["/Users/jichenjiang/Downloads/PRI code1/src/Components/AssetDetails.js"],"names":["React","Component","Table","TableBody","TableCell","TableHead","TableRow","Paper","Grid","Output","data","require","i","length","obj","AssetDetails","constructor","props","state","assets","componentDidMount","fetch","then","results","json","setState","render","loadJSON","jsonfile","callback","jsonObj","XMLHttpRequest","overrideMimeType","open","onreadystatechange","readyState","status","responseText","send","load","jsonData","response","JSON","parse","console","log","styleObj","fontSize","color","textAlign","fontFamily","tableHeader","content"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Output from \"../output.json\";\r\n\r\n//import \"./assets.css\"\r\n\r\nvar data = require('../output.json'); // forward slashes will depend on the file location\r\n\r\nfor(var i = 0; i < data.length; i++) {\r\n    var obj = data[i];\r\n\r\n}\r\n\r\nclass AssetDetails extends Component {\r\n  \r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      assets:[]\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    fetch('http://localhost:3000/data')\r\n         .then(results => results.json()).then(data=>this.setState({ assets: data.data}));\r\n  }\r\n\r\n  render() {\r\n\r\n    var data; \r\n\r\n    function loadJSON(jsonfile, callback) {   \r\n\r\n        var jsonObj = new XMLHttpRequest();\r\n        jsonObj.overrideMimeType(\"application/json\");\r\n        jsonObj.open('GET', \"../output.json\", true);\r\n        jsonObj.onreadystatechange = function () {\r\n              if (jsonObj.readyState == 4 && jsonObj.status == \"200\") {\r\n                callback(jsonObj.responseText);\r\n              }\r\n        };\r\n        jsonObj.send(null);  \r\n     }\r\n\r\n    function load() {\r\n\r\n        loadJSON(jsonData, function(response) {\r\n            data = JSON.parse(response);\r\n            console.log(data);\r\n        });\r\n    }\r\n\r\n    load();\r\n\r\n    const styleObj = {\r\n      fontSize: 13,\r\n      color: \"#4a54f1\",\r\n      textAlign: \"center\",           \r\n      fontFamily: 'quicksand,sans-serif'\r\n    }   \r\n    const tableHeader = (\r\n      <TableHead>\r\n        <TableRow >\r\n          <TableCell><b style={styleObj}>Device Topic</b></TableCell>\r\n          <TableCell><b style={styleObj}>Device Message</b></TableCell>\r\n        </TableRow>\r\n      </TableHead>\r\n    );\r\n    const content = (\r\n      <TableBody>\r\n          <TableRow>\r\n            <TableCell>Output.DeviceMessage</TableCell>\r\n            <TableCell>1</TableCell>\r\n          </TableRow>\r\n      </TableBody>\r\n    );  \r\n    return (\r\n      <div className=\"App-GridDiv\">\r\n        <Grid container justify=\"center\">\r\n          <Paper>\r\n            <Table>\r\n              {tableHeader}\r\n              {content}\r\n            </Table>\r\n          </Paper>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n//<TableCell>{asset.timeLastShown}</TableCell>\r\nexport default AssetDetails;"]},"metadata":{},"sourceType":"module"}