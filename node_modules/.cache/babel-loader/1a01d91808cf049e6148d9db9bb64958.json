{"ast":null,"code":"var _jsxFileName = \"/Users/jichenjiang/Downloads/PRI code1/src/Components/AssetDetails.js\";\nimport React, { Component } from \"react\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport Grid from \"@material-ui/core/Grid\";\nimport Output from \"../output.json\";\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650\n  }\n});\n\nfunction createData(name, calories, fat, carbs, protein) {\n  return {\n    name,\n    calories,\n    fat,\n    carbs,\n    protein\n  };\n}\n\nconst rows = [createData('Frozen yoghurt', 159, 6.0, 24, 4.0), createData('Ice cream sandwich', 237, 9.0, 37, 4.3), createData('Eclair', 262, 16.0, 24, 6.0), createData('Cupcake', 305, 3.7, 67, 4.3), createData('Gingerbread', 356, 16.0, 49, 3.9)];\nexport default function SimpleTable() {\n  const classes = useStyles();\n  return React.createElement(TableContainer, {\n    component: Paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(Table, {\n    className: classes.table,\n    \"aria-label\": \"simple table\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(TableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Dessert (100g serving)\"), React.createElement(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"Calories\"), React.createElement(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"Fat\\xA0(g)\"), React.createElement(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"Carbs\\xA0(g)\"), React.createElement(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"Protein\\xA0(g)\"))), React.createElement(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, rows.map(row => React.createElement(TableRow, {\n    key: row.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    component: \"th\",\n    scope: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, row.name), React.createElement(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, row.calories), React.createElement(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, row.fat), React.createElement(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, row.carbs), React.createElement(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, row.protein))))));\n}\n/*\r\n\r\n//import \"./assets.css\"\r\n\r\nvar jsonData = require('../output.json');\r\n\r\nclass AssetDetails extends Component {\r\n  \r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      assets:[]\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    fetch('http://localhost:3000/data')\r\n         .then(results => results.json()).then(data=>this.setState({ assets: data.data}));\r\n  }\r\n\r\n  render() {\r\n\r\n    var data; \r\n\r\n    function loadJSON(jsonfile, callback) {   \r\n\r\n        var jsonObj = new XMLHttpRequest();\r\n        jsonObj.overrideMimeType(\"application/json\");\r\n        jsonObj.open('GET', \"../output.json\", true);\r\n        jsonObj.onreadystatechange = function () {\r\n              if (jsonObj.readyState == 4 && jsonObj.status == \"200\") {\r\n                callback(jsonObj.responseText);\r\n              }\r\n        };\r\n        jsonObj.send(null);  \r\n     }\r\n\r\n    function load() {\r\n\r\n        loadJSON(jsonData, function(response) {\r\n            data = JSON.parse(response);\r\n            console.log(data);\r\n        });\r\n    }\r\n\r\n    load();\r\n\r\n    \r\n\r\n\r\n    const styleObj = {\r\n      fontSize: 13,\r\n      color: \"#4a54f1\",\r\n      textAlign: \"center\",           \r\n      fontFamily: 'quicksand,sans-serif'\r\n    }   \r\n    const tableHeader = (\r\n      <TableHead>\r\n        <TableRow >\r\n          <TableCell><b style={styleObj}>Device Name</b></TableCell>\r\n          <TableCell><b style={styleObj}>IP Address</b></TableCell>\r\n          <TableCell><b style={styleObj}>Mac Address</b></TableCell>\r\n          <TableCell><b style={styleObj}>Software</b></TableCell>\r\n          <TableCell><b style={styleObj}>Connectivity</b></TableCell>\r\n          <TableCell><b style={styleObj}>Company Name</b></TableCell>\r\n          <TableCell><b style={styleObj}>Time Last Shown</b></TableCell>\r\n        </TableRow>\r\n      </TableHead>\r\n    );\r\n    const content = (\r\n      <TableBody>\r\n        {this.state.assets.map(asset => (\r\n          <TableRow key={asset.assetId}>\r\n            <TableCell component=\"th\" scope=\"row\">\r\n              {asset.assetName}\r\n            </TableCell>\r\n            <TableCell>Tests</TableCell>\r\n            <TableCell>1</TableCell>\r\n            <TableCell>2</TableCell>\r\n            <TableCell>3</TableCell>\r\n            <TableCell>4</TableCell>\r\n            <TableCell>4</TableCell>\r\n            <TableCell>4</TableCell>\r\n          </TableRow>\r\n        ))}\r\n      </TableBody>\r\n    );\r\n    return (\r\n      <div className=\"App-GridDiv\">\r\n        <Grid container justify=\"center\">\r\n          <Paper>\r\n            <Table>\r\n              {tableHeader}\r\n              {content}\r\n            </Table>\r\n          </Paper>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n//<TableCell>{asset.timeLastShown}</TableCell>\r\nexport default AssetDetails; */","map":{"version":3,"sources":["/Users/jichenjiang/Downloads/PRI code1/src/Components/AssetDetails.js"],"names":["React","Component","Table","TableBody","TableCell","TableHead","TableRow","Paper","makeStyles","TableContainer","Grid","Output","useStyles","table","minWidth","createData","name","calories","fat","carbs","protein","rows","SimpleTable","classes","map","row"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Output from \"../output.json\";\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n});\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n  return { name, calories, fat, carbs, protein };\r\n}\r\n\r\nconst rows = [\r\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\r\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\r\n  createData('Eclair', 262, 16.0, 24, 6.0),\r\n  createData('Cupcake', 305, 3.7, 67, 4.3),\r\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\r\n];\r\n\r\nexport default function SimpleTable() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table className={classes.table} aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Dessert (100g serving)</TableCell>\r\n            <TableCell align=\"right\">Calories</TableCell>\r\n            <TableCell align=\"right\">Fat&nbsp;(g)</TableCell>\r\n            <TableCell align=\"right\">Carbs&nbsp;(g)</TableCell>\r\n            <TableCell align=\"right\">Protein&nbsp;(g)</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map(row => (\r\n            <TableRow key={row.name}>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                {row.name}\r\n              </TableCell>\r\n              <TableCell align=\"right\">{row.calories}</TableCell>\r\n              <TableCell align=\"right\">{row.fat}</TableCell>\r\n              <TableCell align=\"right\">{row.carbs}</TableCell>\r\n              <TableCell align=\"right\">{row.protein}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n/*\r\n\r\n//import \"./assets.css\"\r\n\r\nvar jsonData = require('../output.json');\r\n\r\nclass AssetDetails extends Component {\r\n  \r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      assets:[]\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    fetch('http://localhost:3000/data')\r\n         .then(results => results.json()).then(data=>this.setState({ assets: data.data}));\r\n  }\r\n\r\n  render() {\r\n\r\n    var data; \r\n\r\n    function loadJSON(jsonfile, callback) {   \r\n\r\n        var jsonObj = new XMLHttpRequest();\r\n        jsonObj.overrideMimeType(\"application/json\");\r\n        jsonObj.open('GET', \"../output.json\", true);\r\n        jsonObj.onreadystatechange = function () {\r\n              if (jsonObj.readyState == 4 && jsonObj.status == \"200\") {\r\n                callback(jsonObj.responseText);\r\n              }\r\n        };\r\n        jsonObj.send(null);  \r\n     }\r\n\r\n    function load() {\r\n\r\n        loadJSON(jsonData, function(response) {\r\n            data = JSON.parse(response);\r\n            console.log(data);\r\n        });\r\n    }\r\n\r\n    load();\r\n\r\n    \r\n\r\n\r\n    const styleObj = {\r\n      fontSize: 13,\r\n      color: \"#4a54f1\",\r\n      textAlign: \"center\",           \r\n      fontFamily: 'quicksand,sans-serif'\r\n    }   \r\n    const tableHeader = (\r\n      <TableHead>\r\n        <TableRow >\r\n          <TableCell><b style={styleObj}>Device Name</b></TableCell>\r\n          <TableCell><b style={styleObj}>IP Address</b></TableCell>\r\n          <TableCell><b style={styleObj}>Mac Address</b></TableCell>\r\n          <TableCell><b style={styleObj}>Software</b></TableCell>\r\n          <TableCell><b style={styleObj}>Connectivity</b></TableCell>\r\n          <TableCell><b style={styleObj}>Company Name</b></TableCell>\r\n          <TableCell><b style={styleObj}>Time Last Shown</b></TableCell>\r\n        </TableRow>\r\n      </TableHead>\r\n    );\r\n    const content = (\r\n      <TableBody>\r\n        {this.state.assets.map(asset => (\r\n          <TableRow key={asset.assetId}>\r\n            <TableCell component=\"th\" scope=\"row\">\r\n              {asset.assetName}\r\n            </TableCell>\r\n            <TableCell>Tests</TableCell>\r\n            <TableCell>1</TableCell>\r\n            <TableCell>2</TableCell>\r\n            <TableCell>3</TableCell>\r\n            <TableCell>4</TableCell>\r\n            <TableCell>4</TableCell>\r\n            <TableCell>4</TableCell>\r\n          </TableRow>\r\n        ))}\r\n      </TableBody>\r\n    );\r\n    return (\r\n      <div className=\"App-GridDiv\">\r\n        <Grid container justify=\"center\">\r\n          <Paper>\r\n            <Table>\r\n              {tableHeader}\r\n              {content}\r\n            </Table>\r\n          </Paper>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n//<TableCell>{asset.timeLastShown}</TableCell>\r\nexport default AssetDetails; */"]},"metadata":{},"sourceType":"module"}